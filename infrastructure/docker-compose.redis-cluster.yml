version: '3.8'

services:
  redis-node-1:
    image: redis:7-alpine
    ports:
      - "7001:7001"
    volumes:
      - ./redis-data/node1:/data
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7001
    networks:
      - redis-cluster

  redis-node-2:
    image: redis:7-alpine
    ports:
      - "7002:7002"
    volumes:
      - ./redis-data/node2:/data
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7002
    networks:
      - redis-cluster

  redis-node-3:
    image: redis:7-alpine
    ports:
      - "7003:7003"
    volumes:
      - ./redis-data/node3:/data
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes --port 7003
    networks:
      - redis-cluster

networks:
  redis-cluster:
    driver: bridge

# After starting, initialize the cluster manually (or automate in a script):
# docker exec -it <container_id> redis-cli --cluster create <node1_ip>:7001 <node2_ip>:7002 <node3_ip>:7003 --cluster-replicas 0
# Use --cluster-replicas 1 for a 6-node setup with replicas if needed for higher HA.