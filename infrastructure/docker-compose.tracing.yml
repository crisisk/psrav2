version: '3.8'
services:
  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.41
    ports:
      - "14268:14268"
      - "14250:14250"
    environment:
      - SPAN_STORAGE_TYPE=memory  # Use Elasticsearch or Cassandra for production
    depends_on:
      - jaeger-agent

  jaeger-query:
    image: jaegertracing/jaeger-query:1.41
    ports:
      - "16686:16686"
    environment:
      - SPAN_STORAGE_TYPE=memory
    depends_on:
      - jaeger-collector

  jaeger-agent:
    image: jaegertracing/jaeger-agent:1.41
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
    command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
    depends_on:
      - jaeger-collector

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mount a config file for Jaeger metrics scraping
    depends_on:
      - jaeger-query

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Change in production
    depends_on:
      - prometheus

# Example prometheus.yml (create this file in the same dir):
# global:
#   scrape_interval: 15s
# scrape_configs:
#   - job_name: 'jaeger'
#     static_configs:
#       - targets: ['jaeger-query:16686']
#   - job_name: 'psra-services'  # Add metrics endpoints from your services if needed